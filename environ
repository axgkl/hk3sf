#!/usr/bin/env bash
BAST='b'       # ssh $BAST must work
SSH_PORT=60001 # ssh on m1, m2, m3

ZESHELL='zsh'
if [[ -n $BASH ]]; then ZESHELL=bash; fi
source <(kubectl completion $ZESHELL)
source <(glasskube completion zsh)

echo -e "
sourced $ZESHELL completions.
Run ssh $BAST to enable the portforwarding to the bastion host. 
ðŸ’¡ getkubconfig copies it from bastion
ðŸ’¡ bastion_into_cluster puts bastion into the cluster
"

return 2>/dev/null || true

function setup_ssh {
	ssh "$BAST" hostname || {
		echo "ðŸš¨ ssh $BAST failed - configure it in ~/.ssh/config!"
		return 1
	}
	touch ~/.ssh/known_hosts
	local s="$(grep -v 10.0.0 <$HOME/.ssh/known_hosts)"
	echo -e "$s" >$HOME/.ssh/known_hosts
}

function get_kubeconfig {
	scp b:kubeconfig .
	sed -i 's|https://[^:]*:|https://127.0.0.1:|' ./kubeconfig
	rm -f "$HOME/.kubeconfig"
	set -x
	ln -s "$(pwd)/kubeconfig" "$HOME/.kubeconfig"
	set +x
	kubectl get nodes
}

function bastion_into_cluster {
	echo 'ðŸ§§This function requires local ssh configs for: broot (root@bastion) and m1 (root@master)!'
	token=$(ssh m1 "cat /var/lib/rancher/k3s/server/node-token") || return
	ssh broot ifconfig | grep -A 2 eth0 | grep inet | xargs | cut -d ' ' -f 2 >ippub || return
	bast_ext_ip="$(ssh broot /sbin/ifconfig | grep -A 2 eth0 | grep inet | xargs | cut -d ' ' -f 2)"
	hostname="$(ssh broot cat /etc/hostname)" # ! must be the nodename in k8s as well!!
	ver="$(kubectl version | grep Server | cut -d ':' -f2 | xargs)" || return
	echo -e "
    k8s ver: $ver
    hostname: $hostname
    ip: $bast_ext_ip
    token: $token

  "

	local i='(k3s-agent-uninstall.sh || true); '
	i=''$i' curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION="'$ver'"'
	i=''$i' K3S_URL=https://10.0.0.4:6443 K3S_TOKEN="'$token'" '
	i=''$i' INSTALL_K3S_EXEC="agent --node-name="'$hostname'" '
	i=''$i' --kubelet-arg=cloud-provider=external --node-ip=10.0.0.2 '
	i=''$i' --node-external-ip='$bast_ext_ip' --flannel-iface=enp7s0" sh -'
	echo "$i" >inst
	cat inst
	echo -e "\n\x1b[1mOk to run this on bastion node?\x1b[0m"
	echo -e "\x1b[2mNote: flannel-iface set is ok, also for cilium\x1b[0m"
	read key

	chmod +x inst
	scp inst broot:
	rm inst
	ssh broot ./inst || echo 'ðŸš¨Failed to install agent!'
	kubectl get nodes
}

main() {
	case "$1" in
	setup_ssh | 0) setup_ssh ;;
	getkubconfig | 1) get_kubeconfig ;;
	bastion_into_cluster | 2) bastion_into_cluster ;;
	*) echo "Usage: $0 {getkubconfig|bastion_into_cluster}" && exit 1 ;;
	esac
}

main "$@"
